name: Commit Stage
on: push

env:
  REGISTY: ghcr.io
  IMAGE_NAME: sroopsai/employee-register

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{github.workspace}}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable:  true
      - name: Upload Vulnerability Report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: "${{steps.scan.outputs.sarif}}"
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew build
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build Container Image
        run: | 
          chmod +x gradlew
          ./gradlew bootBuildImage \
          --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - name: OCI Image Vulnerability
        uses: anchore/scan-action@v3
        id: scan
        with:
          image:
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}.${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload Vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() | failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log inton container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}